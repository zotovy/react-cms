@import "../../styles/breakpoints";

$width: 73px;
$fullWidth: 256px;

.sidebar {
    width: $width;
    border-right: var(--surface-border);
    background-color: var(--background);
    height: 100vh;
    display: flex;
    flex-direction: column;
    transition: 400ms ease;
    overflow-x: hidden;
    z-index: 10;

    &[data-dark=true] {
        background-color: var(--chakra-colors-gray-800);
        border-right: 1px solid var(--chakra-colors-chakra-border-color);
    }

    .logoItem {
        font-style: normal;
        font-weight: 600;
        font-size: 32px;
        line-height: 38px;
        color: var(--contrast);
        user-select: none;
        padding: 16px 21px 21px 25px;
        display: flex;
        align-items: center;
        position: relative;

        &[data-dark=true] {
            color: var(--contrast);
        }

        span {
            display: block;
            position: absolute;
            left: 63px;
            font-weight: 500;
            font-size: 20px;
            opacity: 0;
            transition: 300ms ease;
        }
    }

    .items {
        .item {
            display: flex;
            padding: 10px 15px;
            margin: 5px 0;
            align-items: center;
            position: relative;

            .icon {
                cursor: pointer;
                height: 38px;
                width: 38px;
                padding: 5px;
                display: flex;
                align-items: center;
                justify-content: center;
                border-radius: 7px;
                transition: 150ms linear;
                background-color: var(--background);

                &:hover {
                    background-color: var(--surface);
                }

                svg {
                    color: var(--hint);
                }

                &[data-dark=true] svg {
                    color: var(--secondary);
                }
            }

            span.text {
                margin-left: 15px;
                font-size: 16px;
                color: var(--hint);
                position: absolute;
                left: 48px;
                white-space: nowrap;
                transition: 200ms ease;
                transform: translateX(5px);
                opacity: 0;
            }

            &[data-dark=true] {
                .icon {
                    svg {
                        color: rgba(255, 255, 255, 0.9);
                    }
                }

                span.text {
                    color: rgba(255, 255, 255, 0.9);
                }
            }

            &[data-active=true] {
                .icon {
                    background-color: var(--surface);

                    svg {
                        color: var(--contrast);
                    }
                }

                span.text {
                    color: var(--contrast);
                }
            }
        }

        :last-child {
            margin-bottom: 0;
        }
    }

    .bottom {
        padding: 21px 35px 21px 21px;
        color: var(--hint);
        cursor: pointer;
        width: 100%;
        transition: 400ms ease;

        &:hover {
            transform: translateX(3px);
        }

        svg {
            transition: transform 300ms ease-in-out;
        }
    }

    @mixin openStateStyles {
        width: $fullWidth;

        .logoItem span {
            opacity: 1;
        }

        .bottom {
            padding-left: calc(100% - 50px);

            svg {
                transform: rotate(180deg);
            }

            &:hover {
                transform: translateX(-3px);
            }
        }

        .items .item {
            &:hover:not(&[data-active=true]) .icon {
                background: none;
                transform: translateX(3px);
            }

            span.text {
                opacity: 1;
                transform: translateX(0);
                transition: 300ms ease;
            }
        }
    }

    &[data-open=true] {
        @include openStateStyles;
    }

    @include lt-md {
        position: absolute;
        @include openStateStyles;

        &:not(&[data-open=true]) {
            transform: translateX(-$fullWidth);
        }
    }
}

.sidebarOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    content: "";
    background-color: rgba(0, 0, 0, 0.3);
    z-index: 9;
    transition: opacity 400ms ease;
    opacity: 0;
    pointer-events: none;

    @include lt-md {
        &[data-open=true] {
            opacity: 1;
            pointer-events: initial;
        }
    }
}